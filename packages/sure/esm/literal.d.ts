import { Primitive } from './core.js';
export declare const literal: <T extends Primitive>(value: T) => import("./core.js").Sure<`not literal string (${string})` | `not literal number (${string})` | `not literal bigint (${string})` | `not literal boolean (${string})` | `not literal symbol (${string})` | `not literal undefined (${string})` | `not literal object (${string})` | `not literal function (${string})`, T, unknown, import("./core.js").MetaNever>;
export declare const is: <T extends Primitive>(value: T) => import("./core.js").Sure<`not literal string (${string})` | `not literal number (${string})` | `not literal bigint (${string})` | `not literal boolean (${string})` | `not literal symbol (${string})` | `not literal undefined (${string})` | `not literal object (${string})` | `not literal function (${string})`, T, unknown, import("./core.js").MetaNever>;
